# SI413 Fall 2025 Unit 1 Labs

language_name: rds

notes_from_prof: |
    Language designed by Brendan Lewis and reviewed by Evan Lee,
    who want you to know that rds stands for Rolling Down the Stairs.

    This is a "postfix" language where the operations come after the
    arguments. Look up "reverse Polish notation" for a similar idea
    using numbers.

    Think about how your interpreter can work with a single stack, where
    each operation does something with the one or two strings on top of
    the stack.


example_program: |
    ~ Example program by Toren Hawk

    ~ print case
    /String!/ p

    ~ input case
    i p

    ~ concatenate, print, and input case
    /This stack stuff is.../ i ss p 

    ~ reversal case, escape character, and inline comment case
    /IT IS //\/driew/r i ~inline comment~ ss ss p 


example_input_1: |
    Woah
    not chill.
    crazzy brah

example_output_1: |
    String!
    Woah
    This stack stuff is... not chill.
    IT IS weird/crazy brah

example_input_2: |
    Radicallll
    totally gnarly
    grom ~it's surfer slang fyi~

example_output_2: |
    String!
    Radicallll
    This stack stuff is... totally gnarly
    IT IS weird/grom ~it''s surfer slang fyi~


language_syntax: |
    A program consists of a sequence of statements.

    Statements:
        Print: EXPR p
            (where EXPR is any expression as defined below)

    Expressions:
        String literal: /STRING/
            An ordinary character is any single character other than
            forward slash / or backslash \.

            An escape sequence is backslash \ followed by any single character.

            A string literal is a forward slash / followed by a sequence of ordinary
            character or escape sequences, followed by a forward slash /.

        Concatenation: EXPR EXPR ss

        Reversal: EXPR r

        Input: i

    Comments:
        A comment starts with a ~ (not inside a string literal),
        and extends until the next ~, or until the end of the line,
        whichever comes first.

    Whitespace and comments are ignored between any expressions and
    statements.

language_semantics: |
  Print takes an expression and prints it to the terminal

  Within a string literal, ordinary characters are interpreted as
  themselves, and escape sequences are interpreted as the character
  after the backslash.

  Concatenate takes two expressions and combines them in left-to-right
  order.

  Reversal takes an expression, reverses it, and
  then returns the reversed string.

  Input reads a line of text from the terminal and returns it
